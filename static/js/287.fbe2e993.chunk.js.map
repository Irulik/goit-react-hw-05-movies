{"version":3,"file":"static/js/287.fbe2e993.chunk.js","mappings":"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","sources":["api/fetchApi.jsx","pages/Page.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f21ad1b0f922e79efcddc668ffbc9508';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async pages => {\n\tconst allResults = {page: 1, results: [], total_pages: pages, total_results: 20000};\n\tfor (let page = 1; page <= pages; page++) {\n\t\tconst response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n\t\tallResults.results.push(...response.data.results);\n\t\tallResults.page = page;\n\t\tallResults.total_results = response.data.total_pages;\n\t}\n\treturn allResults;\n};\n\nexport const fetchSearchApi = async query => {\n\tconst { data } = await axios.get(\n\t\t`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n\t);\n\treturn data;\n};\n\nexport const fetchMovieDetails = async id => {\n\tconst { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\treturn data;\n};\nexport const fetchMovieGenres = async () => {\n\tconst { data } = await axios.get(\n\t\t`/genre/movie/list?api_key=${API_KEY}&language=en-US`\n\t);\n\treturn data;\n};\nexport const fetchCast = async id => {\n\tconst { data } = await axios.get(\n\t\t`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n\t);\n\treturn data;\n};\nexport const fetchReview = async id => {\n\tconst { data } = await axios.get(\n\t\t`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n\t);\n\treturn data;\n};\n\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// Common Styles\nexport const LinkItem = styled(Link)`\n\tmax-width: 200px;\n\tbackground-color: #ffdab9;\n\tdisplay: flex;\n\tposition: relative;\n\tjustify-content: space-between;\n\tflex-direction: column;\n\ttext-decoration: none;\n\tborder-radius: 5px;\n\ttransition: scale 250ms linear, box-shadow 250ms linear;\n\t&:hover {\n\t\tscale: calc(1.03);\n\t\tbox-shadow: 0px 0px 20px 8px gray;\n\t}\n\t&:nth-last-child(-n + 4) {\n\t\tmargin-bottom: 0;\n\t}\n`;\nexport const MoviesList = styled('div')`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 12px;\n`;\nexport const MovieTitle = styled('h2')`\n\ttext-align: left;\n\tfont-size: 20px;\n\tcolor: coral;\n\tpadding: 10px;  \n\t\t\t\t\n`;\nexport const LinkButton = styled(Link)`\n\tdisplay: inline-block;\n\tpadding: 10px;\n\ttext-decoration: none;\n\tborder-radius: 5px;\n\tfont-size: 20px;\n\tfont-weight: 700;\n\tcolor: coral;\n\tborder: 1px solid blue;\n\tbackground-color: lightblue;\n\ttransition: background-color 250ms linear, color 250ms linear;\n\t&:hover, :focus {\n\t\tbackground-color: #ffdab9;\n\t\tcolor: blue;\n\t}\n`;\n\n// Movies Styles\nexport const MoviesSearchButton = styled('button')`\n\tfont-size: 20px;\n\tbackground-color: #ffdab9;\n\tcolor: blue;\n\tborder: none;\n\tborder-radius: 5px;\n\tcursor: pointer;\n\tborder: 1px solid ffdab9;\n\ttransition: background-color 250ms linear, color 250ms linear;\n\t&:hover, focus {\n\t\tcolor: blue;\n\t\tbackground-color: lightblue;\n\t}\n`;\nexport const MoviesForm = styled('form')`\n\tdisplay: flex;\n\tgap: 20px;\n\tpadding: 20px;\n`;\nexport const MoviesInput = styled('input')`\n\tpadding: 10px;\n\tfont-size: 20px;\n\toutline: none;\n\tborder: 1px solid blue;\n\tborder-radius: 5px;\n`;\n\n\nexport const MovieDetailsAdditional = styled('div')`\n\tpadding: 50px;\n`;\nexport const MovieDetailsAdditionalTitle = styled('h3')`\n\tmargin-top: 0;\n\tfont-size: 20px;\n`;\n\n\nexport const LinkBox = styled('div')`\n\tpadding: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchSearchApi } from 'api/fetchApi';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport {\n    MoviesForm,\n    MoviesInput,\n    MoviesList,\n    MoviesSearchButton,\n    MovieTitle,\n    LinkItem,\n} from '../Page.styled';\n\nexport const Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [input, setInput] = useState('');\n    const inputParam = searchParams.get('filter') ?? '';\n    const location = useLocation();\n\n    useEffect(() => {\n        if (inputParam) {\n            setInput(inputParam);\n            fetchMovies(inputParam);\n        }\n    }, [inputParam]);\n\n    const fetchMovies = async (query) => {\n        try {\n            const { results } = await fetchSearchApi(query);\n            if (results.length < 1) {\n                Notiflix.Notify.warning(\"We can't find it, try again\");\n            }\n            setMovies(results);\n        } catch (error) {\n            Notiflix.Notify.warning('Something wrong, try again please');\n        }\n    };\n\n    const onSubmit = (e) => {\n        if (!input) {\n            Notiflix.Notify.warning('Please fill in the gap');\n        }\n        e.preventDefault();\n        setSearchParams(input !== '' ? { filter: input } : {});\n        setInput('');\n\n        fetchMovies(input);\n    };\n\n    const onChangeInput = value => {\n        setInput(value);\n    };\n\n    if (!movies) {\n        return null;\n    }\n\n    return (\n        <>\n            <MoviesForm onSubmit={onSubmit}>\n                <MoviesInput\n                    type=\"text\"\n                    value={input}\n                    name=\"input\"\n                    onChange={e => onChangeInput(e.currentTarget.value.toLowerCase())}\n                />\n                <MoviesSearchButton type=\"submit\">Search</MoviesSearchButton>\n            </MoviesForm>\n            {movies && (\n                <MoviesList>\n                    {movies.map(movie => {\n                        let posterPath;\n                        if (movie.poster_path) {\n                            posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n                        } else {\n                            posterPath = 'https://content.rozetka.com.ua/goods/images/big/274786444.jpg';\n                        }\n                        return (\n                            <LinkItem key={movie.id} to={`${movie.id}`} state={{ from: location }}>\n                                <img src={posterPath} width=\"400\" alt={movie.title} />\n                                <MovieTitle>{movie.title}</MovieTitle>\n                            </LinkItem>\n                        );\n                    })}\n                </MoviesList>\n            )}\n        </>\n    );\n};\n\nexport default Movies;\n\n\n"],"names":["API_KEY","axios","fetchTrendingApi","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pages","allResults","page","_allResults$results","response","wrap","_context","prev","next","results","total_pages","total_results","concat","sent","push","apply","_toConsumableArray","data","abrupt","stop","_x","arguments","fetchSearchApi","_ref2","_callee2","query","_yield$axios$get","_context2","_x2","fetchMovieDetails","_ref3","_callee3","id","_yield$axios$get2","_context3","_x3","fetchCast","_ref5","_callee5","_yield$axios$get4","_context5","_x4","fetchReview","_ref6","_callee6","_yield$axios$get5","_context6","_x5","LinkItem","styled","Link","_templateObject","_taggedTemplateLiteral","MoviesList","_templateObject2","MovieTitle","_templateObject3","MoviesSearchButton","_templateObject4","_templateObject5","MoviesForm","_templateObject6","MoviesInput","_templateObject7","_templateObject8","_templateObject9","_templateObject10","Movies","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","input","setInput","inputParam","get","location","useLocation","useEffect","fetchMovies","_yield$fetchSearchApi","length","Notiflix","t0","_jsxs","_Fragment","children","onSubmit","e","preventDefault","filter","_jsx","type","value","name","onChange","currentTarget","toLowerCase","map","movie","posterPath","poster_path","to","state","from","src","width","alt","title"],"sourceRoot":""}