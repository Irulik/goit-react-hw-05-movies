{"version":3,"file":"static/js/736.cadd49f8.chunk.js","mappings":"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","sources":["api/fetchApi.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f21ad1b0f922e79efcddc668ffbc9508';\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingApi = async pages => {\n\tconst allResults = {page: 1, results: [], total_pages: pages, total_results: 20000};\n\tfor (let page = 1; page <= pages; page++) {\n\t\tconst response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${page}`);\n\t\tallResults.results.push(...response.data.results);\n\t\tallResults.page = page;\n\t\tallResults.total_results = response.data.total_pages;\n\t}\n\treturn allResults;\n};\n\nexport const fetchSearchApi = async query => {\n\tconst { data } = await axios.get(\n\t\t`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n\t);\n\treturn data;\n};\n\nexport const fetchMovieDetails = async id => {\n\tconst { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\treturn data;\n};\nexport const fetchMovieGenres = async () => {\n\tconst { data } = await axios.get(\n\t\t`/genre/movie/list?api_key=${API_KEY}&language=en-US`\n\t);\n\treturn data;\n};\nexport const fetchCast = async id => {\n\tconst { data } = await axios.get(\n\t\t`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n\t);\n\treturn data;\n};\nexport const fetchReview = async id => {\n\tconst { data } = await axios.get(\n\t\t`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n\t);\n\treturn data;\n};\n\n","import styled from \"styled-components\";\n\nexport const CastPerson = styled.div`\nmax-width: 200px;\n`;\nexport const CastImg = styled.div`\nborder-radius: 8px;\n\n`;\nexport const CastActor = styled.div`\n\n`;\nexport const CastCharacter = styled.div`\n`;","import { fetchCast } from '../../api/fetchApi';\nimport {\n    CastPerson,\n    CastImg,\n    CastActor,\n    CastCharacter,\n} from \"./Cast.styled.jsx\"\nimport { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'api/fetchApi';\nimport { useLocation, Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n    Movie,\n    MovieDesc,\n    MovieLeft,\n    MovieRight,\n    CastGroup,\n    MoviePoster,\n    MovieTitle,\n    MovieRating,\n    MovieGenre,\n    MovieDescription,\n    MovieButtons,\n    MovieCast,\n    MovieReviews,\n} from '../../pages/MovieDetails/MovieDetails.styled';\n\n\nconst Cast = () => {\n    const productId = useParams();\n    const location = useLocation();\n    const [movie, setMovie] = useState({});\n    const [genreList, setGenreList] = useState([]);\n    const [cast, setCast] = useState([]);\n    const navigate = useNavigate();\n    const navigationHistory = JSON.parse(sessionStorage.getItem('navigationHistory')) || [];\n\n    useEffect(() => {\n        fetchMovieDetails(productId.id).then((data) => {\n            setMovie(data);\n            setGenreList(data.genres);\n        });\n        fetchCast(productId.id).then((data) => {\n            setCast(data.cast);\n        });\n    }, [productId.id]);\n\n    let posterPath;\n    if (movie.poster_path) {\n        posterPath = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    } else {\n        posterPath = 'https://cdn.create.vista.com/api/media/small/324908572/stock-vector-3d-cinema-film-strip-in';\n    }\n\n    const goBackToPreviousValidUrl = () => {\n        let previousUrl = '';\n        for (let i = navigationHistory.length - 1; i >= 0; i--) {\n            const url = navigationHistory[i];\n            if (!url.includes('cast') && !url.includes('reviews') && url !== location.pathname) {\n                previousUrl = url;\n                break;\n            }\n        }\n        navigate(previousUrl || '/movies');\n    };\n\n    return (\n        <>\n            <Movie>\n                <MovieDesc>\n                    <MovieLeft>\n                        <button onClick={goBackToPreviousValidUrl}>Go Back</button>\n                        <MoviePoster><img src={ posterPath } alt={movie.title}/></MoviePoster>\n                    </MovieLeft>\n                    <MovieRight>\n                        <MovieTitle>{ movie.title }</MovieTitle>\n                        <MovieRating>Rating: { movie.vote_average }</MovieRating>\n                        {genreList.map((genre, index) => (\n                            <MovieGenre key={index}>Genres: { genre.name }</MovieGenre>\n                        ))}\n                        <MovieDescription>Overview: { movie.overview }</MovieDescription>\n                    </MovieRight>\n                </MovieDesc>\n                <MovieButtons>\n                    <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                        <MovieCast>Cast</MovieCast>\n                    </Link>\n                    <Link state={{ from: location }} to={`/movies/${movie.id}/reviews`}>\n                        <MovieReviews>Reviews</MovieReviews>\n                    </Link>\n                </MovieButtons>\n                <CastGroup>\n                    {cast.map((person, index) => (\n                        <CastPerson key={index}>\n                            <CastImg>\n                                <img\n                                    src={person.profile_path\n                                        ? `https://image.tmdb.org/t/p/w500/${person.profile_path}`\n                                        : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'}\n                                    alt={person.name} />\n                            </CastImg>\n                            <CastActor>Actor: {person.name}</CastActor>\n                            <CastCharacter>Character: {person.character}</CastCharacter>\n                        </CastPerson>\n                    ))}\n                </CastGroup>\n            </Movie>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </> \n    );\n};\nexport default Cast;","import styled from \"styled-components\";\n\nexport const Movie = styled.div``;\nexport const MovieDesc = styled.div`\ndisplay: flex;\ngap: 12px;\nmargin-top: 10px;\nmargin-bottom: 10px;;`;\nexport const MovieLeft = styled.div`\ndisplay: inline-block;\nborder: 1px solid #ffdab9;\nborder-radius: 14px;\nmargin: 2px;\nmax-width: 300px;\nwidth: 100%;`;\nexport const MovieRight = styled.div`\ndisplay: inline-block;\nborder: 1px solid #ffdab9;\nborder-radius: 14px;\nmargin: 2px;`;\nexport const GoBack = styled.button``;\nexport const MoviePoster = styled.div`\ndisplay: flex;\ngap: 12px;\nmargin-top: 12px;\nmargin-bottom: 12px;\nmax-width: 300px;\nbackground: rgb(66, 66, 66);\nborder-radius: 15px;`\nexport const MovieTitle = styled.div`\nfont-size: 26px;\nmargin-bottom: 12px;`;\nexport const MovieRating = styled.div`\nfont-size: 16px;\nmargin-bottom: 6px;`;\nexport const MovieGenre = styled.div`    \nfont-size: 16px;\nmargin-bottom: 6px;`;\nexport const MovieDescription = styled.div`\nfont-size: 16px;\ncolor: rgb(136, 136, 136);\nmargin-bottom: 12px;`;\nexport const MovieButtons = styled.div`\ndisplay: flex; \ngap: 10px`;\nexport const MovieCast = styled.button`\ndisplay: inline-block;\npadding: 10px;\ntext-decoration: none;\nborder-radius: 5px;\nfont-size: 20px;\nfont-weight: 700;\ncolor: coral;\nborder: 1px solid #ffdab9;\nbackground-color: lightblue;\ntransition: background-color 250ms linear, color 250ms linear;\n&:hover,\n:focus {\n\tbackground-color: #ffdab9;\n\tcolor: blue;\n}`;\nexport const MovieReviews = styled.button`display: inline-block;\npadding: 10px;\ntext-decoration: none;\nborder-radius: 5px;\nfont-size: 20px;\nfont-weight: 700;\ncolor: coral;\nborder: 1px solid #ffdab9;\nbackground-color: lightblue;\ntransition: background-color 250ms linear, color 250ms linear;\n&:hover,\n:focus {\n\tbackground-color: #ffdab9;\n\tcolor: blue;\n}`;\nexport const CastGroup = styled.div` \nmargin-top: 12px;\ndisplay: flex;\nflex-wrap: wrap;\ngap: 12px;\n`;\nexport const ReviewsGroup = styled.div``;"],"names":["API_KEY","axios","fetchTrendingApi","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pages","allResults","page","_allResults$results","response","wrap","_context","prev","next","results","total_pages","total_results","concat","sent","push","apply","_toConsumableArray","data","abrupt","stop","_x","arguments","fetchSearchApi","_ref2","_callee2","query","_yield$axios$get","_context2","_x2","fetchMovieDetails","_ref3","_callee3","id","_yield$axios$get2","_context3","_x3","fetchCast","_ref5","_callee5","_yield$axios$get4","_context5","_x4","fetchReview","_ref6","_callee6","_yield$axios$get5","_context6","_x5","CastPerson","styled","_templateObject","_taggedTemplateLiteral","CastImg","_templateObject2","CastActor","_templateObject3","CastCharacter","_templateObject4","posterPath","productId","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","genreList","setGenreList","_useState5","_useState6","cast","setCast","navigate","useNavigate","navigationHistory","JSON","parse","sessionStorage","getItem","useEffect","then","genres","poster_path","_jsxs","_Fragment","children","Movie","MovieDesc","MovieLeft","_jsx","onClick","previousUrl","i","length","url","includes","pathname","MoviePoster","src","alt","title","MovieRight","MovieTitle","MovieRating","vote_average","map","genre","index","MovieGenre","name","MovieDescription","overview","MovieButtons","Link","state","from","to","MovieCast","MovieReviews","CastGroup","person","profile_path","character","Suspense","fallback","Outlet","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","ReviewsGroup","_templateObject15"],"sourceRoot":""}